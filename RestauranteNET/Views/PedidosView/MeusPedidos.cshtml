@model IEnumerable<RestauranteNET.Models.Pedido>
@{
    ViewData["Title"] = "Meus Pedidos - Restaurant .NET";
    Layout = null;
}
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/user_orders.css" asp-append-version="true" />
</head>
<body>
    <header class="topbar">
        <div class="logo">
            <a asp-controller="Menu" asp-action="Index">
                <img src="~/imgs/NET.png" alt="Logo">
            </a>
        </div>
        <nav class="topbar-actions">
            <div class="user-menu">
                <img src="~/imgs/user-icon.png" alt="Usuário" class="user-icon" />
                <div class="dropdown">
                    <a asp-area="Identity" asp-page="/Account/Manage/Index">Configurações</a>
                    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="/" method="post" style="margin:0;">
                        <button type="submit" style="background:none;border:none;color:#f5f5f5;padding:0.8rem;width:100%;text-align:left;cursor:pointer;">Logout</button>
                    </form>
                </div>
            </div>
        </nav>
    </header>

    <div class="orders-container">
        <h1>Meus Pedidos (@Model.Count() total)</h1>

        <section class="orders-section">
            <h2>📦 Delivery Próprio (@Model.Count(p => p.Tipo.ToLower() == "proprio"))</h2>
            @if (!Model.Any(p => p.Tipo.ToLower() == "proprio"))
            {
                <p style="color: #888; padding: 1rem;">Nenhum pedido de delivery próprio encontrado.</p>
            }
            else
            {
                <ul class="order-list">
                    @foreach (var pedido in Model.Where(p => p.Tipo.ToLower() == "proprio"))
                    {
                        <li class="order-item">
                            <div class="order-header">
                                @foreach (var item in pedido.Itens)
                                {
                                    <span>@item.Comida.Nome (@item.Quantidade) </span>
                                }
                            </div>
                            <div class="order-details">Total: R$ @pedido.Total.ToString("F2")</div>
                            <div class="order-details">Data: @pedido.Data.ToString("dd/MM/yyyy HH:mm")</div>
                            <div class="order-status">
                                Status:
                                @{
                                    var status = pedido.Status.ToLower();
                                }
                                @if (status == "confirmed")
                                {
                                    <span class="status-confirmed">✅ Confirmado</span>
                                }
                                else if (status == "canceled")
                                {
                                    <span class="status-canceled">❌ Cancelado</span>
                                }
                                else
                                {
                                    <span class="status-pending">⏳ Aguardando Confirmação</span>
                                }
                            </div>
                            @if (status == "pending")
                            {
                                <button class="cancel-btn" onclick="cancelarPedido(@pedido.Id)">Cancelar Pedido</button>
                            }
                        </li>
                    }
                </ul>
            }
        </section>

        <section class="orders-section">
            <h2>🚚 Delivery Parceiro (@Model.Count(p => p.Tipo.ToLower() == "parceiro"))</h2>
            @if (!Model.Any(p => p.Tipo.ToLower() == "parceiro"))
            {
                <p style="color: #888; padding: 1rem;">Nenhum pedido de delivery parceiro encontrado.</p>
            }
            else
            {
                <ul class="order-list">
                    @foreach (var pedido in Model.Where(p => p.Tipo.ToLower() == "parceiro"))
                    {
                        <li class="order-item">
                            <div class="order-header">
                                @foreach (var item in pedido.Itens)
                                {
                                    <span>@item.Comida.Nome (@item.Quantidade) </span>
                                }
                            </div>
                            <div class="order-details">Total: R$ @pedido.Total.ToString("F2")</div>
                            <div class="order-details">Data: @pedido.Data.ToString("dd/MM/yyyy HH:mm")</div>
                            <div class="order-status">
                                Status:
                                @{
                                    var status = pedido.Status.ToLower();
                                }
                                @if (status == "confirmed")
                                {
                                    <span class="status-confirmed">✅ Confirmado</span>
                                }
                                else if (status == "canceled")
                                {
                                    <span class="status-canceled">❌ Cancelado</span>
                                }
                                else
                                {
                                    <span class="status-pending">⏳ Aguardando Confirmação</span>
                                }
                            </div>
                            @if (status == "pending")
                            {
                                <button class="cancel-btn" onclick="cancelarPedido(@pedido.Id)">Cancelar Pedido</button>
                            }
                        </li>
                    }
                </ul>
            }
        </section>

        <section class="orders-section">
            <h2>🍽️ Reservas (@Model.Count(p => p.Tipo.ToLower() == "reserva"))</h2>
            @if (!Model.Any(p => p.Tipo.ToLower() == "reserva"))
            {
                <p style="color: #888; padding: 1rem;">Nenhuma reserva encontrada.</p>
            }
            else
            {
                <ul class="order-list">
                    @foreach (var pedido in Model.Where(p => p.Tipo.ToLower() == "reserva"))
                    {
                        <li class="order-item">
                            <div class="order-header">
                                @foreach (var item in pedido.Itens)
                                {
                                    <span>@item.Comida.Nome (@item.Quantidade) </span>
                                }
                            </div>
                            <div class="order-details">Total: R$ @pedido.Total.ToString("F2")</div>
                            <div class="order-details">Data: @pedido.Data.ToString("dd/MM/yyyy")</div>
                            @if (!string.IsNullOrEmpty(pedido.Horario))
                            {
                                <div class="order-details">Horário: @pedido.Horario:00</div>
                            }
                            <div class="order-status">
                                Status:
                                @{
                                    var status = pedido.Status.ToLower();
                                }
                                @if (status == "confirmed")
                                {
                                    <span class="status-confirmed">✅ Confirmado</span>
                                }
                                else if (status == "canceled")
                                {
                                    <span class="status-canceled">❌ Cancelado</span>
                                }
                                else
                                {
                                    <span class="status-pending">⏳ Aguardando Confirmação</span>
                                }
                            </div>
                            @if (status == "pending")
                            {
                                <button class="cancel-btn" onclick="cancelarPedido(@pedido.Id)">Cancelar Reserva</button>
                            }
                        </li>
                    }
                </ul>
            }
        </section>
    </div>

    <script>
        const userMenu = document.querySelector(".user-menu");
        const userIcon = document.querySelector(".user-icon");
        if (userIcon && userMenu) {
            userIcon.addEventListener("click", () => {
                userMenu.classList.toggle("active");
            });
        }

        async function cancelarPedido(pedidoId) {
            if (!confirm('Tem certeza que deseja cancelar este pedido?')) {
                return;
            }

            try {
                const response = await fetch(`/api/pedidos/${pedidoId}/cancelar`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (response.ok) {
                    alert('✅ Pedido cancelado com sucesso!');
                    location.reload();
                } else {
                    const error = await response.json();
                    alert('❌ Erro ao cancelar pedido: ' + (error.message || 'Tente novamente.'));
                }
            } catch (error) {
                console.error('Erro:', error);
                alert('❌ Erro ao cancelar pedido. Tente novamente.');
            }
        }
    </script>
</body>
</html>